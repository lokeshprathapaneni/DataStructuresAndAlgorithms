1)Problem Description
Given an array A of N integers. Count the number of elements that have at least 1 elements greater than itself.


Problem Constraints
1 <= N <= 105
1 <= A[i] <= 109


Input Format
First and only argument is an array of integers A.


Output Format
Return the count of elements.


Example Input
Input 1:
A = [3, 1, 2]
Input 2:
A = [5, 5, 3]


Example Output
Output 1:
2
Output 2:
1

Ans)

public class Solution {
    public int solve(ArrayList<Integer> A) {


        Integer max= A.get(0);

        for(int i=1;i<A.size();i++){
            if( A.get(i)> max){
                max = A.get(i);
            }

        }
        
        int maxCount=0;
        for(int i=0; i<A.size();i++){
            if( A.get(i).equals(max)){
                ++maxCount;
            }
        }


        return (A.size())-maxCount;

    }
}

2)Problem Description
Given an array A and an integer B. A pair(i, j) in the array is a good pair if i != j and (A[i] + A[j] == B). Check if any good pair exist or not.



Problem Constraints
1 <= A.size() <= 104

1 <= A[i] <= 109

1 <= B <= 109



Input Format
First argument is an integer array A.

Second argument is an integer B.



Output Format
Return 1 if good pair exist otherwise return 0.



Example Input
Input 1:

A = [1,2,3,4]
B = 7
Input 2:

A = [1,2,4]
B = 4
Input 3:

A = [1,2,2]
B = 4


Example Output
Output 1:

1
Output 2:

0
Output 3:

1

Ans)

public class Solution {
    public int solve(ArrayList<Integer> A, int B) {

        for(int i=0 ; i< A.size(); i++){
             for(int j=0; j< A.size();j++){
                 if(i!=j){
                     if(A.get(i)+A.get(j)==B){
                         return 1;
                     }
                 }
             }
        }
        return 0;
    }
}


3)Problem Description
Given an array A of N integers and also given two integers B and C. Reverse the elements of the array A within the given inclusive range [B, C].


Problem Constraints
1 <= N <= 105
1 <= A[i] <= 109
0 <= B <= C <= N - 1


Input Format
The first argument A is an array of integer.
The second and third arguments are integers B and C


Output Format
Return the array A after reversing in the given range.


Example Input
Input 1:

A = [1, 2, 3, 4]
B = 2
C = 3
Input 2:

A = [2, 5, 6]
B = 0
C = 2


Example Output
Output 1:

[1, 2, 4, 3]
Output 2:

[6, 5, 2]

Ans)

public class Solution {
    public ArrayList<Integer> solve(ArrayList<Integer> A, int B, int C) {
        Integer j=C;
        for(Integer i=B; i<=C;i++){
            
            Integer temp=A.get(i);
            A.set(i,A.get(j));
            A.set(j,temp);
            j--;
            if(i>=j){
                break;
            }
        }
        return A;
    }
}


4)Problem Description
You are given a constant array A.

You are required to return another array which is the reversed form of the input array.



Problem Constraints
1 <= A.size() <= 10000

1 <= A[i] <= 10000



Input Format
First argument is a constant array A.



Output Format
Return an integer array.



Example Input
Input 1:

A = [1,2,3,2,1]
Input 2:

A = [1,1,10]


Example Output
Output 1:

 [1,2,3,2,1] 
Output 2:

 [10,1,1] 

Ans)

public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public ArrayList<Integer> solve(final List<Integer> A) {

return solve1(new ArrayList(A));
    }

     private static ArrayList<Integer> solve1(ArrayList<Integer> A) {
        Integer j=A.size()-1;
        for(Integer i=0; i<A.size();i++){
            
            Integer temp=A.get(i);
            A.set(i,A.get(j));
            A.set(j,temp);
            j--;
            if(i>=j){
                break;
            }
        }
        return A;
    }
}


5)Problem Description
Given an integer array A of size N and an integer B, you have to return the same array after rotating it B times towards the right.


Problem Constraints
1 <= N <= 105
1 <= A[i] <=109
1 <= B <= 109


Input Format
The first argument given is the integer array A.
The second argument given is the integer B.


Output Format
Return the array A after rotating it B times to the right


Example Input
Input 1:

A = [1, 2, 3, 4]
B = 2
Input 2:

A = [2, 5, 6]
B = 1


Example Output
Output 1:

[3, 4, 1, 2]
Output 2:

[6, 2, 5]

Ans)
public class Solution {
    public ArrayList<Integer> solve(ArrayList<Integer> A, int B) {
        int i=0, j= A.size()-1;
        //reversing an Array

        if(B>A.size()){
            B=B%A.size();
        }

       reverseArray(A,i,j);
    //    System.out.println("Reversed Array"+A);
       //reverse first part of Array
       reverseArray(A,0,B-1);
    //    System.out.println("Reversed Array of part 1"+A);
       //reverse second part of Array
       reverseArray(A,B,A.size()-1);
    //    System.out.println("Reversed Array of part 2"+A);

       return A;


    }

    private static void reverseArray(ArrayList<Integer> A,int i,int j){
        while(i<=j){
            int temp= A.get(i);
            A.set(i, A.get(j));
            A.set(j,temp);
            i++;
            j--;
        }
    }
}


6)What is the time complexity for inserting/deleting at the beginning of the array?

Ans) O(N)

